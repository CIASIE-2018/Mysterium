{% extends "layouts/master.twig" %}
{% block bodyClass %}game{% endblock %}
{% block content %}
    <div class="game_container">
        <div class="menu_container">
            <img src="http://cdn2.trictrac.net/documents/formats/dynamic/fa/c0/01f57e520baa35836c6cc8db52356fcb/documents/originals/86/15/9b65092f3d01c66b622768c6950a4b722019.png">
        </div>
        <div class="game_content">
            <div class="player_list">
                {% include 'partials/playerList.twig' with {mediums : infos.mediums} %}
            </div>

            <div class="card_selected">
                <div class="card_selected_content">
                    <img src="/images/cards/{{ infos.mediums[0].cards[0] }}.png">
                </div>
            </div>

            <div class="cards_hand">
                <div class="cards_hand_detail">
                    <img src="/images/cards/{{ infos.hand[0] }}.png">
                </div>

                <div class="cards_hand_list">
                    {% include 'partials/playerHand.twig' %}
                </div>
            </div>
        </div>
        <div class="game_plateau">
            {% include 'partials/playerBoard.twig' with {cards : infos.mediums[0].cards} %}
        </div>
    </div>
{% include 'partials/chat.twig' %}
{% endblock %}


{% block scripts %}
<script>var username = "{{user.username}}"</script>
<script src="/js/client_chat.js"></script>
<script>
    $(function(){
        let mediums = {};
        
        function init(mediums, socketGame){
            init_board();
            init_player_list();
            init_hand();
            init_ghost_hand_form(socketGame);
        }

        function init_mediums(){
            {% for medium in infos.mediums %}
                mediums.{{medium.username}} = {
                        visions: [{{medium.visions}}],
                        cards  : [{{medium.cards}}],
                    {% if infos.type == "ghost" %}
                        card : {{medium.card}}
                    {% endif %}
                }
            {% endfor %}
        }

        function set_zoom(img){
            return img.magnify({
                src : img.prop('src')
            });
        }

        function set_plateau(cards){
            let swiper = $('.swiper-container')[0].swiper;
            swiper.removeAllSlides();
            let tab = cards.map(function(card){
                return `
                <div class='swiper-slide'>
                    <img src='/images/cards/${card}.png'>
                </div>`
            });
            swiper.addSlide(1,tab);
            set_scenario_card_zoom(cards[0]);
        }

        function set_scenario_card_zoom(card){
            $('.card_selected_content img').attr('src', `/images/cards/${card}.png`);
        }

        function init_player_list(){
            $('.player_list_item').on('click', function(e){
                let username = $(e.currentTarget).data('username');
                $('input[name=player-receiver]').val(username);
                let data = mediums[username]; 
                set_plateau(data.cards);
                set_scenario_card_zoom(data.card);
            });
        }

        function init_hand(){
            set_zoom($('.cards_hand_detail img'));
            $('.cards_hand_list_item').on('click', function(e){
                let pictureUrl    = $(e.target).prop('src');
                let detailElement = $('.cards_hand_detail img');
                detailElement.fadeOut('fast', function () {
                    detailElement.prop('src', pictureUrl);
                    detailElement.fadeIn('fast', function(){
                        set_zoom(detailElement);
                    });
                });
            });
        }

        function init_board(){
            new Swiper('.game_plateau .swiper-container', {
                slidesPerView : 6,
                spaceBetween : 30
            });
        }

        function init_ghost_hand_form(socket){
            $('#hand_form').on('submit', function(e){
                e.preventDefault();
                let cards = [];
                $('input[name=cards_hand]:checked').each(function(i,card){
                    cards.push(parseInt($(card).val()));
                });
                if(cards.length > 0){
                    let username = $('input[name=player-receiver]').val();
                    socket.emit('send_card_to_medium', {
                        receiver : username,
                        cards    : cards
                    });
                }
            });
        }

        let socketGame = io('/game');

        socketGame.on('message', function(data){
            console.log(data.type + ' : ' + data.content);
        });

        socketGame.on('player_list', function(html){
            $('.player_list').html(html);
            init_player_list();
        });

        socketGame.on('hand', function(html){
            $('.cards_hand_list').html(html);
            init_hand();
            init_ghost_hand_form(socketGame);
        });

        socketGame.on('tableau', function(m){
            mediums = m;
            init(mediums, socketGame)
            location.reload();
        });

        init_mediums();
        init(mediums, socketGame)
    });
</script>
{% endblock %}